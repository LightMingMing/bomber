buildscript {
    repositories {
        maven { url = uri("https://maven.aliyun.com/repository/public") }
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'war'
}

ext {
    assertjVersion = '3.22.0'
    jacksonVersion = '2.13.1'
    jettyVersion = "9.4.45.v20220203"
    jmhVersion = '1.34'
    lombokVersion = '1.18.22'
    log4jVersion = "2.17.0"
    micrometerVersion = '1.8.2'
    mockitoVersion = '4.3.1'
    springdataVersion = "2.6.1"
    springsecurityVersion = "5.6.1"
    springframeworkVersion = "5.3.16"
}

group 'bomber'
version '1.0.3'

tasks.compileJava {
    // Since version 9
    // options.release.set(8)

    options.encoding('UTF-8')
    options.compilerArgs.add('-parameters')
    options.compilerArgs.add('-Xlint:deprecation')
}

buildDir = 'build'

webAppDirName = 'src/main/webapp'

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ["src/main/java", "src/main/resources"]
    }
    jmh {
        java.srcDirs = ['src/jmh/java']
        compileClasspath += sourceSets.main.compileClasspath
        runtimeClasspath += sourceSets.main.runtimeClasspath
    }
}

repositories {
    maven { url = uri("https://maven.aliyun.com/repository/public") }
    mavenCentral()
}

dependencies {

    jmhImplementation sourceSets.main.output

    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    providedCompile('com.google.code.findbugs:annotations:3.0.1')
    providedCompile('javax.el:javax.el-api:3.0.0')
    providedCompile('javax.servlet:javax.servlet-api:4.0.1')
    providedCompile('javax.websocket:javax.websocket-api:1.1')
    providedCompile('org.glassfish:javax.el:3.0.0')
    providedCompile("org.eclipse.jetty:jetty-annotations:${jettyVersion}")
    // providedCompile("org.eclipse.jetty:jetty-deploy:${jettyVersion}")
    providedCompile("org.eclipse.jetty:jetty-server:${jettyVersion}")
    providedCompile("org.eclipse.jetty:jetty-webapp:${jettyVersion}")

    implementation project(':bomber-asserter')
    implementation project(':bomber-common')
    implementation project(':bomber-engine')
    implementation project(':bomber-function')

    implementation fileTree(dir: 'lib', includes: ['*jar'])

    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
    implementation("com.fasterxml.jackson.module:jackson-module-mrbean:${jacksonVersion}")
    implementation("com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}")

    implementation('com.h2database:h2:2.1.210')
    implementation('com.lmax:disruptor:3.4.4')

    implementation('com.zaxxer:HikariCP:5.0.1') {
        exclude group: "org.slf4j"
    }

    implementation('commons-codec:commons-codec:1.15')
    implementation('commons-fileupload:commons-fileupload:1.4')
    implementation('commons-io:commons-io:2.11.0')
    implementation('commons-logging:commons-logging:1.2')
    implementation('commons-net:commons-net:3.8.0')

    implementation('io.lettuce:lettuce-core:6.1.6.RELEASE') {
        exclude group: "io.netty"
        exclude group: "io.projectreactor"
    }

    implementation("io.micrometer:micrometer-core:${micrometerVersion}") {
        exclude group: "org.hdrhistogram"
        exclude group: "org.latencyutils"
    }

    implementation('io.projectreactor.netty:reactor-netty-http:1.0.15')

    implementation("javax.transaction:transaction-api:1.1")
    implementation('javax.validation:validation-api:2.0.1.Final')
    implementation('javax.xml.bind:jaxb-api:2.4.0-b180830.0359')

    implementation('mysql:mysql-connector-java:8.0.25') {
        exclude group: "com.google.protobuf"
    }

    implementation('net.bytebuddy:byte-buddy:1.12.8')

    implementation('net.htmlparser.jericho:jericho-html:3.4')

    // Don't upgrade
    implementation('ognl:ognl:3.1.26')

    implementation('org.antlr:antlr-runtime:3.5.2')

    implementation("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}")
    implementation("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation('org.apache.commons:commons-math3:3.6.1')
    implementation('org.apache.commons:commons-pool2:2.10.0')

    implementation('org.apache.httpcomponents:httpcore:4.4.15')
    implementation('org.apache.httpcomponents:httpclient:4.5.13') {
        exclude group: "org.apache.httpcomponents"
    }
    implementation('org.apache.httpcomponents:httpmime:4.5.13') {
        exclude group: "org.apache.httpcomponents"
    }

    implementation('org.aspectj:aspectjweaver:1.9.8')

    implementation('org.cache2k:cache2k-core:1.2.4.Final')

    implementation('org.flywaydb:flyway-core:8.5.0')

    implementation('org.freemarker:freemarker:2.3.31')

    implementation('org.hibernate:hibernate-core:5.6.5.Final') {
        exclude group: "javax.activation"
        exclude group: "javax.xml.bind"
        exclude group: "net.bytebuddy"
        exclude group: "org.glassfish.jaxb"
        exclude group: "org.hibernate.common"
        exclude group: "org.javassist"
        exclude group: "org.jboss"
        exclude group: "org.jboss.logging"
        exclude group: "org.jboss.spec.javax.transaction"
    }
    implementation('org.hibernate.common:hibernate-commons-annotations:5.1.2.Final')
    implementation("org.hibernate.validator:hibernate-validator:6.2.0.Final") {
        exclude group: "jakarta.validation"
        exclude group: "org.jboss.logging"
    }

    implementation('org.javassist:javassist:3.28.0-GA')

    implementation('org.jboss.logging:jboss-logging-annotations:2.2.1.Final')
    implementation('org.jboss.logging:jboss-logging:3.3.2.Final')

    implementation('org.jsoup:jsoup:1.14.3')

    implementation('org.mvel:mvel2:2.4.12.Final')

    implementation('org.objenesis:objenesis:3.2')

    implementation("org.projectlombok:lombok:${lombokVersion}")

    implementation('org.reactivestreams:reactive-streams:1.0.3')

    implementation("org.springframework:spring-aop:${springframeworkVersion}")
    implementation("org.springframework:spring-beans:${springframeworkVersion}")
    implementation("org.springframework:spring-context:${springframeworkVersion}")
    implementation("org.springframework:spring-context-support:${springframeworkVersion}")
    implementation("org.springframework:spring-core:${springframeworkVersion}")
    implementation("org.springframework:spring-expression:${springframeworkVersion}")
    implementation("org.springframework:spring-jdbc:${springframeworkVersion}")
    implementation("org.springframework:spring-jms:${springframeworkVersion}")
    implementation("org.springframework:spring-messaging:${springframeworkVersion}")
    implementation("org.springframework:spring-orm:${springframeworkVersion}")
    implementation("org.springframework:spring-oxm:${springframeworkVersion}") // spring data redis
    implementation("org.springframework:spring-tx:${springframeworkVersion}")
    implementation("org.springframework:spring-web:${springframeworkVersion}")
    implementation("org.springframework:spring-webflux:${springframeworkVersion}")
    implementation("org.springframework:spring-webmvc:${springframeworkVersion}")
    implementation("org.springframework:spring-websocket:${springframeworkVersion}")

    implementation("org.springframework.data:spring-data-commons:${springdataVersion}")
    implementation("org.springframework.data:spring-data-keyvalue:${springdataVersion}")
    implementation("org.springframework.data:spring-data-redis:${springdataVersion}")

    implementation('org.springframework.retry:spring-retry:1.3.1')

    implementation("org.springframework.security:spring-security-core:${springsecurityVersion}") {
        exclude group: "org.springframework"
    }
    implementation("org.springframework.security:spring-security-config:${springsecurityVersion}") {
        exclude group: "org.springframework"
    }
    implementation("org.springframework.security:spring-security-web:${springsecurityVersion}") {
        exclude group: "org.springframework"
    }

    implementation('org.yaml:snakeyaml:1.29')

    testImplementation project(':bomber-engine')

    testImplementation('junit:junit:4.13.2')

    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("org.mockito:mockito-core:${mockitoVersion}") {
        exclude group: "net.bytebuddy"
        exclude group: "org.objenesis"
    }

    testImplementation("org.springframework:spring-test:${springframeworkVersion}")

    jmhImplementation("org.openjdk.jmh:jmh-core:${jmhVersion}") {
        exclude group: "org.apache.commons"
    }

    jmhAnnotationProcessor("org.openjdk.jmh:jmh-generator-annprocess:${jmhVersion}") {
        exclude group: "org.apache.commons"
    }
}

task explodedWar(type: Sync) {
    into "${buildDir}/exploded"
    with war
}

task jettyStartup(type: JavaExec) {
    debugOptions {
        port = 5005
        server = true
        suspend = false
    }

    systemProperty("STAGE", "DEVELOPMENT")
    systemProperty("log4j2.skipJansi", "false")

    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.bomber.JettyBootstrap"
}

task jettyShutdown(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.bomber.JettyShutdown"
}